{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: And([Or([a, b]), Or([Not(c), And([b, d])]), b, Or([d, c])]), resulting in: And([Or([a, b]), Or([Not(c), And([b, d])]), WatchedLiteral(b,true), Or([d, c])])","target":"rule_engine"}
{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: Or([a, b]), resulting in: Or([WatchedLiteral(a,true), WatchedLiteral(b,true)])","target":"rule_engine"}
{"message":"Rule applicable: distribute_or_over_and ([(\"Base\", 8400)]), to expression: Or([Not(c), And([b, d])]), resulting in: And([Or([Not(c), b]), Or([Not(c), d])])","target":"rule_engine"}
{"message":"Rule applicable: unwrap_nested_and ([(\"Base\", 8800)]), to expression: And([Or([WatchedLiteral(a,true), WatchedLiteral(b,true)]), And([Or([Not(c), b]), Or([Not(c), d])]), WatchedLiteral(b,true), Or([d, c])]), resulting in: And([Or([WatchedLiteral(a,true), WatchedLiteral(b,true)]), Or([Not(c), b]), Or([Not(c), d]), WatchedLiteral(b,true), Or([d, c])])","target":"rule_engine"}
{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: Or([Not(c), b]), resulting in: Or([Not(c), WatchedLiteral(b,true)])","target":"rule_engine"}
{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: Not(c), resulting in: WatchedLiteral(c,false)","target":"rule_engine"}
{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: Or([Not(c), d]), resulting in: Or([Not(c), WatchedLiteral(d,true)])","target":"rule_engine"}
{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: Not(c), resulting in: WatchedLiteral(c,false)","target":"rule_engine"}
{"message":"Rule applicable: boolean_literal_to_wliteral ([(\"Minion\", 4100)]), to expression: Or([d, c]), resulting in: Or([WatchedLiteral(d,true), WatchedLiteral(c,true)])","target":"rule_engine"}
{"count":9,"message":" Number of rules applied"}
